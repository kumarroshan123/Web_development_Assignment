1.Find the employee with employee_id 25.
Ans. db.Test.find({employee_id:25})

2.Find all employees in Department3.
Ans. db.Test.find({department:'Department3'})

3.List all employees with a salary greater than 55000.
Ans. db.Test.find({salary : {$gt:55000} })

4.Count the number of employees in Department1.
Ans.  db.Test.countDocuments({department:"Department1"})

5.Increase the salary of the employee with employee_id 50 by 5000.
Ans.  db.Test.updateMany({employee_id:50},{$inc:{salary:5000}})

6.Find all employees who joined after 2022-01-15.
Ans. db.Test.find({join_date : {$gt:'2022-01-15'} })

7.Delete the employee with employee_id 10.
Ans. db.Test.deleteMany({employee_id:10})

8.Find all employees whose last name starts with 'L'.
Ans. db.Test.find({last_name:{$regex:/^L/,$options:"i"}})

9.Find all employees with no manager (manager_id is None).
Ans. db.Test.find({manager_id:null})

10.Find all employees who are older than 30.
Ans. db.Test.find({age:{$gte:30}})

11.Update the department of the employee with employee_id 75 to Department2.
Ans.  db.Test.updateMany({employee_id:75},{$set:{department:'Department2'}})

12.Find all employees whose email contains 'firstname5'.
Ans.  db.Test.find({email:{$regex:"firstname5"}})

13.Find all employees who joined on or before 2022-01-10.
Ans. db.Test.find({join_date:{$lte:"2022-01-10"}})

14.Retrieve all employees sorted by salary in descending order.
Ans. db.Test.find().sort({salary:-1})

15.Count the number of employees who are in Department4 and have a salary above 52000.
Ans.  db.Test.countDocuments({$and:[{department:"Department4"},{salary:{$gt:52000}}]})